/* */ 
"use strict";
var di_1 = require('./metadata/di');
var directives_1 = require('./metadata/directives');
var view_1 = require('./metadata/view');
var di_2 = require('./metadata/di');
exports.AttributeMetadata = di_2.AttributeMetadata;
exports.ContentChildMetadata = di_2.ContentChildMetadata;
exports.ContentChildrenMetadata = di_2.ContentChildrenMetadata;
exports.QueryMetadata = di_2.QueryMetadata;
exports.ViewChildMetadata = di_2.ViewChildMetadata;
exports.ViewChildrenMetadata = di_2.ViewChildrenMetadata;
exports.ViewQueryMetadata = di_2.ViewQueryMetadata;
var directives_2 = require('./metadata/directives');
exports.ComponentMetadata = directives_2.ComponentMetadata;
exports.DirectiveMetadata = directives_2.DirectiveMetadata;
exports.HostBindingMetadata = directives_2.HostBindingMetadata;
exports.HostListenerMetadata = directives_2.HostListenerMetadata;
exports.InputMetadata = directives_2.InputMetadata;
exports.OutputMetadata = directives_2.OutputMetadata;
exports.PipeMetadata = directives_2.PipeMetadata;
var lifecycle_hooks_1 = require('./metadata/lifecycle_hooks');
exports.AfterContentChecked = lifecycle_hooks_1.AfterContentChecked;
exports.AfterContentInit = lifecycle_hooks_1.AfterContentInit;
exports.AfterViewChecked = lifecycle_hooks_1.AfterViewChecked;
exports.AfterViewInit = lifecycle_hooks_1.AfterViewInit;
exports.DoCheck = lifecycle_hooks_1.DoCheck;
exports.OnChanges = lifecycle_hooks_1.OnChanges;
exports.OnDestroy = lifecycle_hooks_1.OnDestroy;
exports.OnInit = lifecycle_hooks_1.OnInit;
var view_2 = require('./metadata/view');
exports.ViewEncapsulation = view_2.ViewEncapsulation;
exports.ViewMetadata = view_2.ViewMetadata;
var decorators_1 = require('./util/decorators');
exports.Component = decorators_1.makeDecorator(directives_1.ComponentMetadata, function(fn) {
  return fn.View = View;
});
exports.Directive = decorators_1.makeDecorator(directives_1.DirectiveMetadata);
var View = decorators_1.makeDecorator(view_1.ViewMetadata, function(fn) {
  return fn.View = View;
});
exports.Attribute = decorators_1.makeParamDecorator(di_1.AttributeMetadata);
exports.Query = decorators_1.makeParamDecorator(di_1.QueryMetadata);
exports.ContentChildren = decorators_1.makePropDecorator(di_1.ContentChildrenMetadata);
exports.ContentChild = decorators_1.makePropDecorator(di_1.ContentChildMetadata);
exports.ViewChildren = decorators_1.makePropDecorator(di_1.ViewChildrenMetadata);
exports.ViewChild = decorators_1.makePropDecorator(di_1.ViewChildMetadata);
exports.ViewQuery = decorators_1.makeParamDecorator(di_1.ViewQueryMetadata);
exports.Pipe = decorators_1.makeDecorator(directives_1.PipeMetadata);
exports.Input = decorators_1.makePropDecorator(directives_1.InputMetadata);
exports.Output = decorators_1.makePropDecorator(directives_1.OutputMetadata);
exports.HostBinding = decorators_1.makePropDecorator(directives_1.HostBindingMetadata);
exports.HostListener = decorators_1.makePropDecorator(directives_1.HostListenerMetadata);
